# +
print(3+5)
print('3+5')
print('a'+'b')
# -
print(0-5.2)
# *
print(2*3)
print('la'*3)
# **
print(3**4) #3的4次方
# /
print(13/3)
# // （整除） x 除以 y 并对结果向下取整至最接近的整数
print(13//3)
print(-13//3)
# % （取模）
# 返回除法运算后的余数。
print(13 % 3)
print(-25.5 % 2.25)
# << （左移）
# 将数字的位向左移动指定的位数。
# （每个数字在内存中以二进制数表示，即 0 和1）
#2 << 2 输出 8。 2 用二进制数表示为 10。
#向左移 2 位会得到 1000 这一结果，表示十进制中的 8
print(2<<2)
print(2<<3)
#>> （右移）
#将数字的位向右移动指定的位数。
# 11 >> 1 输出 5。
#11 在二进制中表示为 1011，
# 右移一位后输出 101 这一结果，表示十进制中的 5。
print(11>>1)
#& （按位与）+
#对数字进行按位与操作。
#按位与是针对二进制数的操作，指将两个二进制数的每一位都进行比较，如果两个相应的二进位都为 1 则此位为 1，否则为 0。
# 在本例中，5 的二进制表达为 101，3 的二进制表达为 11（为补全位数进行按位操作写作 011），则按位与操作后的结果为 001，对应的十进制数为 1。
print(5&3)
#....详见简明Python教程 运算符与表达式

a = 2
a = a * 3
print(a)

a = 2
a *= 3
print(a)
